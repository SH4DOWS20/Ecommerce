{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebas\\\\Desktop\\\\CPAN 212 - Modern Web Technologies\\\\Week 1 Example - Introduction to Node.js\\\\Ecommerce\\\\Ecommerce\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport CartList from './CartList';\n\n// Reducer function to manage cart state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CART':\n      return action.payload;\n    case 'ADD_ITEM':\n      return [...state, action.payload];\n    case 'DELETE_ITEM':\n      return state.filter(item => item.id !== action.payload);\n    case 'UPDATE_ITEM':\n      return state.map(item => item.id === action.payload.id ? action.payload : item);\n    default:\n      return state;\n  }\n};\nfunction App() {\n  _s();\n  const [cart, dispatch] = useReducer(cartReducer, []);\n  const [newItem, setNewItem] = useState('');\n  useEffect(() => {\n    // Fetch data from the server and update the cart state\n    fetch('http://localhost:3008/api/cart').then(response => response.json()).then(data => {\n      dispatch({\n        type: 'SET_CART',\n        payload: data\n      });\n      console.log(data);\n    }).catch(error => console.error(error));\n  }, []);\n  const handleDelete = id => {\n    fetch(`http://localhost:3008/api/cart/delete/${id}`, {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      dispatch({\n        type: 'DELETE_ITEM',\n        payload: id\n      });\n      console.log(data);\n    }).catch(error => console.error(error));\n  };\n  const handleUpdate = (id, updatedData) => {\n    fetch(`http://localhost:3008/api/cart/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedData)\n    }).then(response => response.json()).then(data => {\n      dispatch({\n        type: 'UPDATE_ITEM',\n        payload: data\n      });\n      console.log(data);\n    }).catch(error => console.error(error));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Create an object representing the new item\n    const newItemData = {\n      name: newItem\n    };\n\n    // Send a POST request to add the new item to the cart\n    fetch('http://localhost:3008/api/cart/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newItemData)\n    }).then(response => response.json()).then(data => {\n      dispatch({\n        type: 'ADD_ITEM',\n        payload: data\n      });\n      console.log(data);\n    }).catch(error => console.error(error));\n\n    // Clear the input field\n    setNewItem('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cart Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty. Add items below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(CartList, {\n      cart: cart,\n      onDelete: handleDelete,\n      onUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type an item\",\n        value: newItem,\n        onChange: e => setNewItem(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Item to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MbT0Ii5edvWbRxoNzCsWg+aW2eI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","CartList","jsxDEV","_jsxDEV","cartReducer","state","action","type","payload","filter","item","id","map","App","_s","cart","dispatch","newItem","setNewItem","fetch","then","response","json","data","console","log","catch","error","handleDelete","method","handleUpdate","updatedData","headers","body","JSON","stringify","handleSubmit","e","preventDefault","newItemData","name","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onDelete","onUpdate","onSubmit","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/sebas/Desktop/CPAN 212 - Modern Web Technologies/Week 1 Example - Introduction to Node.js/Ecommerce/Ecommerce/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\nimport CartList from './CartList';\r\n\r\n// Reducer function to manage cart state\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CART':\r\n      return action.payload;\r\n    case 'ADD_ITEM':\r\n      return [...state, action.payload];\r\n    case 'DELETE_ITEM':\r\n      return state.filter(item => item.id !== action.payload);\r\n    case 'UPDATE_ITEM':\r\n      return state.map(item => (item.id === action.payload.id ? action.payload : item));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [cart, dispatch] = useReducer(cartReducer, []);\r\n  const [newItem, setNewItem] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the server and update the cart state\r\n    fetch('http://localhost:3008/api/cart')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        dispatch({ type: 'SET_CART', payload: data });\r\n        console.log(data);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  const handleDelete = id => {\r\n    fetch(`http://localhost:3008/api/cart/delete/${id}`, { method: 'POST' })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        dispatch({ type: 'DELETE_ITEM', payload: id });\r\n        console.log(data);\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  const handleUpdate = (id, updatedData) => {\r\n    fetch(`http://localhost:3008/api/cart/update/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedData),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        dispatch({ type: 'UPDATE_ITEM', payload: data });\r\n        console.log(data);\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    // Create an object representing the new item\r\n    const newItemData = { name: newItem };\r\n\r\n    // Send a POST request to add the new item to the cart\r\n    fetch('http://localhost:3008/api/cart/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newItemData),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        dispatch({ type: 'ADD_ITEM', payload: data });\r\n        console.log(data);\r\n      })\r\n      .catch(error => console.error(error));\r\n\r\n    // Clear the input field\r\n    setNewItem('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cart Items</h1>\r\n      {cart.length === 0 ? (\r\n        <p>Your cart is empty. Add items below:</p>\r\n      ) : null}\r\n\r\n      <CartList cart={cart} onDelete={handleDelete} onUpdate={handleUpdate} />\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type an item\"\r\n          value={newItem}\r\n          onChange={e => setNewItem(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Add Item to Cart</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}